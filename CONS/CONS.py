import re
import numpy as np

def split(word):
    return [char for char in word]

fasta = """>Rosalind_9324
CCGGGGAGACCGCAGCTTGCGGCATGCTCAGTTACATCTCATTATGTCTCGAGTCTCTCA
GGAGGCGCACCCCGGAGGGCCGGTTGAAACAAGAGCCACCCAGCTCCATCTAAGTACACA
ATAACGGGAACCTGTTACCCACTATGATAATGTGTTGACTCGCGAGCCATTCACACCCTC
ATCACCAGGAGGGCTTCATTATTGGGGATGAAACGTTGATGGGCCCGCAGAAGATCATAG
CAGAGAAGCACCGATTCAGCGCCTGCAAACCCAGGGAGGCTCCGGCGGCGTTACCTTCAA
GACCTATCAAAGTTCTTTTTAACATAAATATGGAGCATTGCGGAAAAGCGCGAGGGTCAC
TTTAATATTTCGACTTCTACCGGGTGAGGGAGGAAAATGCCTTCAGAAGCTGCACATTAG
TCCCAACTCGTCCCGGACCCATGATTATCCGTATTAAGCCTGTATCAAAAGGGTTCTATG
GTAGATTGGTGCCTGAACTTTGCGAACCAGTTAGAAGACTAACGGATCTGCCGTTCATTT
CTTGGGAGTTCCGCAAGTTGGCAAGGTAATAAGCGGGCACACGAACCCGCGCCGTATGTT
TTTTGTCATGATTCGTATCGTCGTTAACTACGGTCAACGACGACCCATAATCTGGGCAGA
AGTACATCGGCACCTACCCGTCTAATATTAACCCAGGGCCTCACCCAAGGGATGCGGGAG
GATTTCTAATTTTGCTACTTGGGTCTTTACAAGCTTAGATCCATAGATGGTCCGCTAATT
TCATGAGTAGTACATACATGTAGAGCCAGTTTCCTGCCGATTCGGCGGGACAGTGACCGT
CACCGATTTCGACGACTTTAGTATCTGTGAAGCCCCACTGTGAAATTGAATAACCCAGAT
TTATGACAAGCGACGACCATGTTCC
>Rosalind_9067
CTGTGACCGCCACTAACCGCGCGTCAATGAGTGGTAGTCTGGAAGCACGTTTTACAGACC
GTTGGTGGTGAAGATCCGTGCCCGGCCCGTACCTAAGCAGATCAAACCCCAGCTGGTCCT
CAATGGGTGACGTGTCATCTTGCCCAGCGAGGGCACAGATCTCCGCCCCGAAGGGTCCAA
GCTTCAACTCATAATTCTCAACAGCCTTTGTTCGATGAGTAGAGGAACCCCGGACATGTG
GATACATGACAGACCATACTGGCGATAGGCTTCAGACCTGAAATTTTCGAGCGGCCCCCA
AGATACCTTGAAGCGGATGGCGCAGGAAATTACTGAGGGTGGCTAGGTTCACGCAGTCTA
TTAGTAGATTTACTATCAGTGAAGCGACATATACACTTCTGTTCGCGGTTGATGCGGTCT
GGAGCAGAGGCAAAAACGGAGGTCCCTATATGCTTTCGGTTTGCTAATTTCCACCTCGGT
GAGTGTAGCGGGGTGATACAGAGCTGGAGTCGCTGCCATTCGGTCGGGAACAGGAGGCGT
AGCTGGCCGGGACGTAACGAACATTCGCCGCAACTTACGAAATGCGTTAAATTCCTATTG
GTCTTTTTGCGTAGACGGCTGGCCCGGGCGCCGCCGTCACCCAGAGTGATCCCGATGACA
TTACTTAGCCAGTTGGCTTCAAGTAAACCATTCCCAGTTTCAGAGTCAGGCCCAGACATG
TCCGACAATCTAATACGTATGCATCGGTAATGTGTTTGTACCCGGATTCCGCTCCCGAGG
GTGGGGAAGTAGTCATGCGAGGTGTTTAAAGAATGTACTGCGTCCCCTATTTTACCCAGT
CAGTCTAGACGTGTTATGTGGTCGGCCACGAGGCGCCAGGGACTAGACCTGGTCATCGTC
GTTAAAGTAAGGCTTACCGGTGCTC
>Rosalind_3688
CGTAGGGATTCTAAGCCAGTCAGGTGACGCCCGCAGGGTTTTTGCGTTCAGATACTCGCA
CCATTGCGTCACTCTATAACATAAAGGAAGATGGAGGCGGTGGCGAACATTGCATCATAC
ACCTCGTCGCTCTGGGAAGAGGAGCGCGTGCATGGTCGTAGTGTGCACCTTTACAATTAA
TTGTTTAACAAAGAAGGCGCGTTGGGGCACGCCCTGAATGTTGGTCAGCACGTGTACATA
CTATCAGTGTTCCTACTCATAATGAGGAGCGGGGGTCGTACCGATTATGTCTAAGCTGCT
GCTGGTAGAGATTTTGATATAGGCGGTACTGCGAGCAGGTGAACCGGGGGAGATTCTAGA
ACAAAGTACTCACCACAAACTCTGGTGGCTTTTAGTATGGTTAGGCTTCTATGACACGCA
GAACAGCTTTAAAACACAATGGCCATTGCATGTCCGTCCATATATCTCGAACGCCCTAAA
TCAGCGCTAAAGCAGTAATAAGCAGCACGATGTACCGTCTAAGCCATGTAAATACGGTGG
TGAGTCACAACCAAACGACCCCGGATATCCGTTGCGGAGCGGTAAAGGTAGATCCCATTG
CTAGCCGGGCTGTTCCGCCATCAAGTGTAAGATGAACGCGCGCGCAAGCCTCTAGCACAG
CTCGCCTTCAAGGCTCAGGACCCCACTATGGTCCGGTGGTAGTGTTGGTCACTCGAAGAT
TTGCTGGGTTGAGGAAGCTTAAACATAGTATTACACGAATCCCGCATGTCATCACCTGCA
TTTGTGTGTTCTTCGGCGAGAGAGGTCATCATCTACCACGGTACGGGCTTTTAGTGATCC
ATGCTATTTTATATCTTCGCCTGGGAATTTGGAATTCTAAGTGTCCTGGCTTTATCTGAC
TTCCTTCACGTGCTTTAGGCACGTT
>Rosalind_2116
CGGAGCTGCTGCGTGAAAAGTACCCGAAGAACTCGATCTTCTGGTAAATAACTACTTGCT
GCTATTCAGAGTGTAAATAGAGAGGCGAACTGATGTAATGGATGATAACGTATTCAAGGG
ATACTGTCATTGGAGGTGCTGGGGTGAGGACGCCGGACAGTGGAGCGTGTGCTGCAGTGT
AAGTCACAGAGTGTCATATCTGTGAGATCGTTAGAGTTTGCCTTCCCGCTTTGCGTAGGA
ACACCTCACGGCACATTTAGATCGTATTTATGCCGGGCCATAGCCACCACTTTATCGGCA
GACACTCTCCCGAGCTCCAGAGTGCGCCCTGCAACGGGAGCAGTCGATGATTTGAAGTAT
CGTAGCGGTGCAGAACGGAGGTACGACTAACCCTTGCTCGGTTTAGGAGATGTTAGAATA
CTCGATATCACAAGAGACAACGCGCTCATGAATCCTCATTCGAAATATATCTTATTAACC
GGAGGGTATCAATTGCGCTGTTCTCTCGAGCGAGTAATAAACCGCAGCACGTTTAGCCAG
TCCGGTACCCCAGCCGTTCTTCACGCGCCACGGAAAGACTAAATTGCATAGGAATGCTTC
CCGTATTTTAGGCTAGGGCGAGTGGCGCGGAATTGGGGTTAATGAAACGTCCATCGACCA
ACAAATGTTTCTGAATGACATCACATGGAGACCTCACGCAGTTTTCCGGATGTAGGGCAG
TCGTAGACTAGCTGCTATGAACTGTAAGTGTATGGTATCTGCTGACAGTGGGCGTTTGAA
GATAGACAGAGCGATCCTGCGTTATAACGCCCAATGTCATAAGGCAGATCCTTTTTTGTT
AATGTCCTAACATATGCAACCAGAGCCATATTCCGACCTTATAGAGTTCTGAGAAGTCTG
CTGCCGTTATATTATCGTACAGATT
>Rosalind_2694
ATGGGGTCGGCTTAATGACGCTTCGGAAGACGCTGAACAGACCTTACGACGGGCAACGTA
CTGGTCCAACCGATTTTTGGACTGTGGCAGTGAACGTCATCGTAACTCCTGACTATACAT
GCAGGGATTTCGTGCCGGGGATAATTATTTTTCTAGTCGTTGATGATACGTTACCGGAAC
CTGAGTCCACGTCTATGTCACGTAACCCGCTCTTAGTGCGAGCACGAGGGCTAAAATCGC
CGCCAGCACGTAGTCCCAAGGGGGCCCGTAACCCAGGAATTCATTTTGCTCAAAGTTTGA
AAACTCTCGAATCACTACGAGACATTAGTCCACCTTTCAGCGCGCAATGTGGGAATCAAT
CGACGGCGTGATAGCTGGACGTTGGATCCGTTCATTAAGTTATACATGGTCGTGCCCGAA
CAAAAAAATTCATAAGTCAGGCTCGGTATGCTGGAGTGTGCGAGCCTCTTGTACCGGAGC
CCAACGCATTTCTTACGTTGGCGTAATTGAAGGAGTGGAATTTACCAGACCCACAGACAT
TTCATGAGCTGTCTCGCCGGCGTTCACACTGTTAAGTTCACTACTGCAGGGGCGTAACCC
GATACAACGTGGACGATTGCAGCATAACACTGTTGCTTTGAACAGGCATGGATCGTGTGC
AGAACATAAAGCCAATGCGCGGGGTCGTTATGGTCAGTGTACGTACGTACCACTGGTGGT
ACCGAGACATTCGATAACACAGGCATCCACTATGTCAAGTTCCTCTGGCCACCCAAAAAA
GTCGTCCAGCCGAAATGGGACACAAGTACACCTGACGTGAGATTAGTCTCCCGGTACAAA
ACCCATATTATTAACGTAGCGCCTTGCTCATTTGTCCGCTCTTGTCACTCTGGAGGTGTT
AAAAAACGGCAACCGTCAATAGGGA
>Rosalind_8426
AAGATCTCGATGCCCAACGATAAGTGCCCCGGGATTATGTGCGCATATAATATGGGAATA
TATGGCATGTGGCAGCGAGTTCAGAACTCGACAACAGAGGATGCACTGTACGGAACGCCT
GTCGGGAATTACATCGTTCCGAAGTGTTTACACTTCCGGTCCTAGTCCATACTAATCAGC
TGGCAGGCCGATGTAAAAATGAAGTAATCCAGGCAGACTGAGGGCGAGACTAGAATTCTT
ATCCTTAAGCACAGCCCGGGGACGAATACTATCTAAGTTTTTCTTCAGTGGGTACGCCAA
GAATAGAGATCAAAAGCTAACTCGACAGGACGCAGTTTCTAACAAACTAAGGTGAAAAAG
CGGGGCTAGTGAGTAGATCGGCGCGGCAGTCTCTGCGCCGTTCGCACACGAAGGCCCCCG
GATATGCCGTTGTTCAAAGACTTCTGATCCTTTCTCTCGCGTGGGCGAAGGGGGATGAGT
TTCCCACGAAAGTTCCAACGGGGGCTTATCAGTTGTCAAGGAAATGAGCGTAGTTGCTCC
CATAGGCCGTTCCCATGGGGCCTGCCGCGACGATCCCTGCCTAATCCCCAATGACCTCCC
TAAAAGTCCGCACTGTATACTACCCCACAAGTGCTGATGAGTGTGAAGACGGCTCACTAA
GGTTGGGTTGGCTTATGGGTGCTATGCGCGCAGTCGCGCCTACCCTTGTTAAGAGCCCAA
ACGGGGCCGCAGCTAATCCGCGACATCGCTACAACTCAGAATGGGTTTACGTCTGCTGGG
AGAAGAAGTGAGAGACTAATTCAAAAAAGATGGACTACACATCGGCGGAGATCCGCCACG
AGTCTGGGAAATATTGTAACCGCCGTACTGTCGTTACCGTTGACCGAGCTGAGTCTGGGG
ATCATCGTAGGGCTCTTCCAAACAC
>Rosalind_1773
TTGTAAGGATTACCTACCCACCAACCCACACCCTATATCTATCGGAATTCTGATGAAATC
AAAGTTTAGCTTTTAACGCTTCTCGAGTCGAATAATGCACATGGTTCGTCTCGATGCTAT
ACTTCTGAGCGATTGTATAGGGTATCAGCCAGACAACGGTGTAGGCGAATTACTTCTTGT
ACATCCTAGTCAATAGTAAACCAGTCCTAGATTTTGCGTACAAGCTCCCCAAAATCCGAG
CTCAGGACTCAACCTGTGGAATACCACTGTATCGTGCACTGAAGGCCTGTCCTGTAAGCG
CGGGGCGAGTGTTTTGGCTGGCTGGGGTTTTTGTATAAACGACCCGACTCCAACGCGCGG
AGGGCCGCCTTCTCATTTCCCGTTGCAAACCACCCTCGGGGCTGGTCCTGCGCAATGTCA
GAACACCCGATAATTGCGTTAAGTAAGGCTGGCTGAGCATAAGCGTCTGCGGATATTCTT
ACGGATTTTTTTTCATCGAGCTGGTTGAGCTACTTTACCTACTACATCCTTTCGCCGTCT
TTTGCGCGCACCGGCTAGCATCCTAGGTACTTTCTGATTACAGCATTCCAGGCGGCGGCC
ATATACCAGTGTCATCGGAAGTGCCGTTGAATTGCGCAAACGAGCGTATGTCGTGGTGTA
GTAATTGTGTGACAGGTTTGCGACAGTATCAGTCGGGTTTTGACTACCGAGTTGCCTGGT
TGTTTAGGCTCAGGACCGTGTAGTCCGACGTGCTACCGTCGGCTAGCTGGCGGCATCTAA
CTCCTTTTAATCTACACGCCTATAATACATTTCCTCGGTTTCACATCGGTGCGCCGAGGT
CCACACCAAAGTTGATCCCCGGATGACCGATACAAACAGTAAAGTTCGATTGTCACTTAG
GACATACCGCAATAACCGAAGGTAC
>Rosalind_6981
CGGCTTTCAGCCGAGATCTAGGACTGCGGTTCGACCGTGATCGAGGTCACGGGTGCGGGG
CCGTTCGTTTATTCTGCGACACACCGGGGTTAGAACCCCTGATGCGCTAACCGCAACCCG
GGTGGGGCGGTCAGGGCTGTACCAAAAAGCAGGTCGCCACATACTGATTTCCCGACCAAC
AGGGGCTTCGGTAGCAGCTGAAGGCGTAACTTTTCATTCCCGTTAGGCGTGTCAATACAT
GTTCGTATCCATAAAACACAGAGAAGCCCCCTTGTCTTGAGGCTTTCCAAACTAGACCCT
CTCGTTGCGATTACTTAATGAAATTTTGTTGCTGCCGACCTCGTGGTAACGGAACTGCGT
CATTTTGGAATCTTGCAATTGAGGGAGGTCGTTTGTTATACTGTAGACGCTTCTTGAGGA
GTCGAAGGAGGTTCGCGTGTTACGCCCGGGGGTCGTACTATTATTCATTTAGTATCAGGC
CCGTCGTCGAACTCGGTTCAATTATTTCCGGATTCTAATTCGTGCTTGCGGTTCACGGCA
AAGGCTCGGCCCGGCCGACTTTCGTTTTACATCATAATCTATAAAAGAGGCCTAGTTATC
GTTCGTGCCACAAGGCATCGATTTCGGCCCCCCACAGGCGCTCCGCATAAACATTCGGGA
TGTATCGTAGTGGACAGTTCGAGTACTACTGAGGCGAGCCTCTGAAGCCTCGTATAGGAC
GCCATAGCTGACGGGAGATAGAGGATCCCGGCGTAGAAAGTGGCGTTTCATACGCTGAGT
TGTGATTATTCGAGTTCCCTGAAGTTTGGTGATTCTACACTGGAGCACGGCAATCAAGTT
GCTCGAAGCCTAAGAAGCCGTATGGGGTGCTGAACCTCCGCTAAGGTGCATTCATCTTGC
GTGTACCCATGCTAGTAAGTGTTCA
>Rosalind_2716
TTCAGAGCGCGATAACGGACTACGATTCTAGATAACGCATCGGAAATTTCGTGCCAAAGC
TATGCAGGTCCGTCTGTAAGATAACCTGCCGTATTAATTCAAAGCAGACGGGAGGGGCCC
GCCCCTGGATTAGAAAATAGTGGTCAGATGACTTCGGGAGGCTGTTCCCCGCTCGCGGCT
CTTCATACAAATTCCCTGGTTTTACCCGGAGGACACCCGCGTAAAAGGAAGACTCACGAC
GACGTAGGGTCGTAAAATATGTCGGTGAAATTTAAACTAAGGTCACTCGAGCCGCATTGG
AGCTGCCGGTGTCTGTCAATGCACGCTCTTAAACATATAATCGAGTCTCATAAACGGCGC
AGGCGGGTTCGAGGTACATTGTCGAAATTCATCCTACAGGGACGACTACTACCTTGGCAA
TAAACCATTGAATCCTATACATAATTACGGCGGGGGCCGGACAAGCCGTTGGCTTAACGG
CGGAGTCACCAAGAACATAGGTAAACCATGATGTAAATCCCGTAACTAGAGCGTAAAACG
CGAGGCGTTCAGACTCCTATAATAGAATGGCGGTGCAGTGTAGTGAGGTATATCAAGAGA
GAGCCAGGCTGACGCCAACCAATAACACCCAGAATTCGTACTTTACCCGTGCCTAGCCTT
GCGGTGTTGATCCATTTCAGGACAAGCCGTTTTCGTTCAGAGACTGGTACTGTGGTGTAG
AGGCAGTGGTAAGATCTCGTCCTGTTGATGTACCGAGGTCTACTCACTGGCTACCTCTAA
TGGGGAGCAACGCGTCTCGTCACATTTATTTACTTCGTTGCGTCCTCCTTGCTCTTGCGT
GAGTCACTAAGACACCAAACTATGGTAATAACTTCTGTTTAGTTAAGAATGCCCCTAGGG
GGACTATAGATAGGATTACAGACCG
>Rosalind_6651
CGGGATCCCGACGAATGCCCTAGGAACTACCTAACGAAACACGCCGAGAGGCGGCTCCCG
AAGAGAGGTGAGTAATCGCGCACCGCTGAGCTTCACTGGGCAACAGAGGCCGTGGCTCAA
GCACTGGCTGGGCGTTCGGTATGTAACCAGCCCCGTTCTAAGTTTCACATGTGGACTGCG
TTCCAATTCGCGGGTGTGACAGGCTCCCTATCCGTCTCCAACACACAATGAGAGAAACAA
TCTGTCGGCTAGAAGATGCACGAGGTGCTCGGGTCATAGGTCGAGAGACTGCTTGTTTGT
AGACGTAAGTTGACATAGTCAGATCTGCGCGGATAGCACTGAGATGTGAAATGTCCCGTT
CCAGAACAGGCTCTAGGTCTGTGCAATATTTTGAGAGCTACTAGGGAAAGGAGTCAGAGG
AACGTTAGGATTATTTTAGTAGTTACAACATCTACACAGTCATCGAAGCTGGCCGGACGT
CTAAGCAACGATCGTGGATGGGCGGCGATTGCTGCAACGGGCTATAGAACATAAGCTATA
CAAACTCCTCCCAAAAAAGCGTATATTCGTAATAAGTCATGTCCCTGTATCGATAATCCA
CACTGAATTGTCTCTAATAAATGCTCGATGCATCTCATGATATTATTCTGCAGAGGGCTC
TTTGGTGTGACGTCATAGTGGTGATATTAACTTGTCGGTCCGTATTGCGTTGGATTGCAT
TGCTCGAGCCGGCAACGACGACCCCCCGTCCCTTTAGCCGGAGTTCTCCTTTAAGGGGTC
CTCTGTTCGACGGACTCCGCGGCCTGAACTATCAGCACGTGCCGATATATCTCGCCTCGC
CTGACGACTGTTCACTGTGATGAACAAAACTGCTTCCTTGCATCCCTTGTTGGGTCCGTT
GGATATGCTGTGCAGAGTACGCGAT
"""

newfasta = fasta.replace("\n", "")

newfasta = re.split('>Rosalind_\d+',newfasta)
newfasta.pop(0)
slist = []

for string in newfasta:
    slist = slist + [split(string)]

chararray = np.row_stack(slist)

count_a = np.count_nonzero(chararray == 'A', axis=0)
count_t = np.count_nonzero(chararray == 'T', axis=0)
count_c = np.count_nonzero(chararray == 'C', axis=0)
count_g = np.count_nonzero(chararray == 'G', axis=0)

dict_index = {0:'A', 1:'C', 2:'G', 3:'T'}
final_list = []

for num_a, num_t, num_c, num_g in zip(count_a, count_t, count_c, count_g):
    listmax = [num_a, num_c, num_g, num_t]
    max = np.max(listmax)
    final_list = final_list + [dict_index[listmax.index(max)]]

print(''.join(final_list))
count_a = " ".join(count_a.astype(str))
count_t = " ".join(count_t.astype(str))
count_c = " ".join(count_c.astype(str))
count_g = " ".join(count_g.astype(str))


print("A: " + count_a + "\n" + "C: " + count_c + "\n" + "G: " + count_g + "\n" + "T: " + count_t)
